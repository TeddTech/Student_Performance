geom_density()
p %>%
ggplot() +
aes(ArrDelay) +
geom_freqpoly()
p <- dat2 %>% group_by(Dest) %>% summarise(ArrDelay = mean(ArrDelay))
p
p %>%
ggplot() +
aes(ArrDelay) +
geom_density()
p %>%
ggplot() +
aes(ArrDelay) +
geom_freqpoly()
p %>%
ggplot(Dest, ArrDelay) +
aes(ArrDelay) +
geom_bar(aes(color = ArrDelay))+
coord_polar()
p <- dat2 %>% group_by(Dest) %>% summarise(ArrDelay = mean(ArrDelay))
p
p %>%
ggplot() +
aes(ArrDelay) +
geom_density()
p %>%
ggplot() +
aes(ArrDelay) +
geom_freqpoly()
p %>%
ggplot() +
aes(Dest,ArrDelay) +
geom_bar(aes(color = ArrDelay))+
coord_polar()
p <- dat2 %>% group_by(Dest) %>% summarise(ArrDelay = mean(ArrDelay))
p
p %>%
ggplot() +
aes(ArrDelay) +
geom_density()
p %>%
ggplot() +
aes(ArrDelay) +
geom_freqpoly()
p %>%
ggplot() +
aes(Dest,ArrDelay,color = ArrDelay) +
geom_bar(stat = 'identity')+
coord_polar()
p <- dat2 %>% group_by(Dest) %>% summarise(ArrDelay = mean(ArrDelay))
p
p %>%
ggplot() +
aes(ArrDelay) +
geom_density()
p %>%
ggplot() +
aes(ArrDelay) +
geom_freqpoly()
p %>%
ggplot() +
aes(Dest,ArrDelay,color = Dest) +
geom_bar(stat = 'identity')+
coord_polar()
p <- dat2 %>% group_by(Dest) %>% summarise(ArrDelay = mean(ArrDelay))
p
p %>%
ggplot() +
aes(ArrDelay) +
geom_density()
p %>%
ggplot() +
aes(ArrDelay) +
geom_freqpoly()
p %>%
ggplot() +
aes(Dest,ArrDelay,color = Dest) +
geom_bar(stat = 'identity')+
coord_polar()
p <- dat2 %>% group_by(Dest) %>% summarise(ArrDelay = mean(ArrDelay))
p
p %>%
ggplot() +
aes(ArrDelay) +
geom_density()
p %>%
ggplot() +
aes(ArrDelay) +
geom_freqpoly()
p %>%
ggplot() +
aes(Dest,ArrDelay) +
geom_bar(stat = 'identity')+
coord_polar()
q <- dat2 %>% group_by(Origin) %>% summarise(DepDelay = mean(DepDelay))
q
q %>%
ggplot() +
aes(DepDelay) +
geom_density()
q %>%
ggplot() +
aes(DepDelay) +
geom_freqpoly()
q %>%
ggplot() +
aes(Origin,DepDelay) +
geom_bar(stat = 'identity')+
coord_polar()
dat3 <- dat2 %>% group_by(Origin) %>% summarise(f = n())
dat3
dat3 <- dat2 %>% group_by(Origin) %>% summarise(Dep_flights = n()) %>% arrange(desc(Dep_flights))
dat3
dat3$f[1:10]
dat3 <- dat2 %>% group_by(Origin) %>% summarise(Dep_flights = n()) %>% arrange(desc(Dep_flights))
dat3
dat3$Origin[1:10]
dat3 <- dat2 %>% group_by(Origin) %>% summarise(Dep_flights = n()) %>% arrange(desc(Dep_flights))
dat3
#10 busiest airports in terms of the number of departure flights
dat3$Origin[1:10]
hist(dat3$Origin~dat3$Dep_flights)
hist(dat3$Dep_flights~dat3$Origin~)
dat3 <- dat2 %>% group_by(Origin) %>% summarise(Dep_flights = n()) %>% arrange(desc(Dep_flights))
dat3
#10 busiest airports in terms of the number of departure flights
dat3$Origin[1:10]
hist(dat3$Dep_flights~dat3$Origin)
dat3 <- dat2 %>% group_by(Origin) %>% summarise(Dep_flights = n()) %>% arrange(desc(Dep_flights))
dat3
#10 busiest airports in terms of the number of departure flights
dat3$Origin[1:10]
hist(dat3, dat3$Dep_flights~dat3$Origin)
dat3 <- dat2 %>% group_by(Origin) %>% summarise(Dep_flights = n()) %>% arrange(desc(Dep_flights))
dat3
#10 busiest airports in terms of the number of departure flights
dat3$Origin[1:10]
dat2 %>% ggplot() + geom_histogram(aes(Origin), stat = "count")
dat2 %>% ggplot() + geom_histogram(aes(Origin))
dat3 %>% ggplot() + geom_histogram(aes(Dep_flights))
dat3 <- dat2 %>% group_by(Origin) %>% summarise(Dep_flights = n()) %>% arrange(desc(Dep_flights))
dat3
#10 busiest airports in terms of the number of departure flights
dat3$Origin[1:10]
dat2 %>% ggplot() + geom_histogram(aes(Origin), stat = "count")
knitr::opts_chunk$set(echo = TRUE)
marathon<- read.csv2(url("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAABq9we9fAMiJLK7llJNQ_HJdEzxn2Pks5aHw4NwA%3D%3D"), header=TRUE, sep=",")
marathon<- read.csv2(url("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAABq9we9fAMiJLK7llJNQ_HJdEzxn2Pks5aHw4NwA%3D%3D"), header=TRUE, sep=",")
marathon<- read.csv2(url(
"https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAADr271pVEKwHd3d3x5_lvsimoXp56bks5aLDIiwA%3D%3D"), header=TRUE, sep=",")
library(tidyverse)
marathon_ful<- marathon %>%
filter(cohort1 == 1) %>%
select(c(age, bmi, female, footwear, group, injury, mf_d, mf_di, mf_ti,  max, sprint, tempo))%>% mutate(mf_s = mf_d/mf_ti)
marathon
marathon %>% filter(injury<1)
marathon %>% filter(injury==min(injury))
marathon_ful<- marathon %>%
select(c(bmi = as.double(bmi), female=as.factor(female), injury = as.factor(injury), mf_d, mf_ti))%>% mutate(mf_s = mf_d/mf_ti)
marathon_ful
marathon_ful<- marathon %>%
mutate(bmi = as.double(bmi), female=as.factor(female), injury = as.factor(injury)) %>%
select(c(bmi, female, injury, mf_d, mf_ti))%>% mutate(mf_s = mf_d/mf_ti)
marathon_ful
marathon_ful<- marathon %>%
mutate(bmi = as.double(bmi), female=as.factor(female), injury = as.factor(injury)) %>%
select(c(bmi, female, injury, mf_d, mf_ti))%>% mutate(mf_s = mf_d/mf_ti) %>%
filter(mf_s!=is.na(mf_s))
marathon_ful
marathon_test<- marathon %>%
mutate(bmi = as.double(bmi), female=as.factor(female), injury = as.factor(injury)) %>%
select(c(bmi, female, injury, mf_d, mf_ti))%>% mutate(mf_s = mf_d/mf_ti) %>%
filter(mf_s!=is.na(mf_s))
marathon_test
install.packages('GGally')
library(GGally)
ggpairs(marathon_test, columns = c(bmi,female,injury,mf_s))
ggpairs(marathon_test, columns = c('bmi','female','injury','mf_s'))
marathon_test %>% arrange(desc(injury))
(fit <- lm(marathon_test$mf_s~marathon_test$bmi*marathon_test$injurey*marathon_test$female, marathon_test))
(fit <- lm(marathon_test$mf_s~marathon_test$bmi*marathon_test$injury*marathon_test$female, marathon_test))
p.adjust(summary(fit)$coefficients[,4],method = 'bonferroni')
fit
tidy(fit)
library(GGally)
library(broom)
tidy(fit)
summary(fit)
tidy(fit)
summary(fit) %>% tidy()
tidy(fit)
tidy(fit)
summary(fit)
summary(fit)
tidy(fit)
summary(fit)
tidy(fit)
summary(fit)
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon<- read.csv2(url("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAADr271pVEKwHd3d3x5_lvsimoXp56bks5aLDIiwA%3D%3D"), header=TRUE, sep=",")
library(tidyverse)
marathon_ful<- marathon %>%
filter(cohort1 == 1) %>%
select(c(age, bmi, female, footwear, group, injury, mf_d, mf_di, mf_ti,  max, sprint, tempo))%>% mutate(mf_s = mf_d/mf_ti)
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m %>% ggplot() +  geom_line(aes(x = sprint, y = marathon_groups, group = tempo,colour = tempo))
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m %>% ggplot() +  geom_line(aes(x = sprint, y = marathon_groups, group = tempo,colour = tempo)) +geom_point() + geom_jitter()
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>% ggplot() +  geom_line(aes(x = sprint, y = marathon_groups, group = tempo,colour = tempo)) + geom_point(aes(x = sprint, y = marathon_groups)) + geom_jitter()
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>%
ggplot() +
geom_line(aes(x = sprint, y = marathon_groups, group = tempo,colour = tempo)) +
geom_point(aes(x = marathon_ful$sprint, y = marathon_ful$mf_s))
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
marathon_ful %>%
ggplot() +
geom_line(aes(x = sprint, y = mean(mf_s), group = tempo,colour = tempo)) +
geom_point(aes(x = sprint, y = mf_s))
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m %>% ggplot() + aes(x = sprint, y = marathon_groups, colour = tempo) +  geom_line(aes(group = tempo)) +geom_point() + geom_jitter()
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>% ggplot() + aes(x = sprint, y = marathon_groups, colour = tempo) +  geom_line(aes(group = tempo)) +geom_point() + geom_jitter()
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>% ggplot() + aes(x = sprint, y = marathon_groups, colour = tempo) +  geom_line(aes(group = tempo)) +geom_point() + geom_jitter()
p <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo))
p %>%
ggplot() +
aes(colour = tempo) +
geom_line(aes(x = sprint, y = mean(mf_s), group = tempo)) +
geom_point(x = sprint, y = mf_s) +
geom_jitter()
p
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>% ggplot() + aes(x = sprint, y = marathon_groups, colour = tempo) +  geom_line(aes(group = tempo)) +geom_point() + geom_jitter()
p <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo))
p %>%
ggplot() +
aes(colour = tempo) +
geom_line(aes(x = sprint, y = mean(mf_s), group = tempo)) +
geom_point(x = sprint, y = mf_s) +
geom_jitter()
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>% ggplot() + aes(x = sprint, y = marathon_groups, colour = tempo) +  geom_line(aes(group = tempo)) +geom_point() + geom_jitter()
p <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo))
p %>%
ggplot() +
aes(colour = tempo) +
geom_line(aes(x = sprint, y = mean(mf_s), group = tempo)) +
geom_point(x = as.double(sprint), y = mf_s) +
geom_jitter()
p
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>% ggplot() + aes(x = sprint, y = marathon_groups, colour = tempo) +  geom_line(aes(group = tempo)) +geom_point() + geom_jitter()
p <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo))
p %>%
ggplot() +
aes(x = sprint,colour = tempo) +
geom_line(aes( y = mean(mf_s), group = tempo)) +
geom_point( y = mf_s) +
geom_jitter()
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>% ggplot() + aes(x = sprint, y = marathon_groups, colour = tempo) +  geom_line(aes(group = tempo)) +geom_point() + geom_jitter()
p <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo))
p %>%
ggplot() +
aes(x = sprint,colour = tempo) +
geom_line(aes( y = mean(mf_s), group = tempo)) +
geom_point( y = p$mf_s) +
geom_jitter()
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>% ggplot() + aes(x = sprint, y = marathon_groups, colour = tempo) +  geom_line(aes(group = tempo)) +geom_point() + geom_jitter()
p <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo))
(fit <- lm(marathon_ful$mf_s~marathon_ful$sprint*marathon_ful$tempo, marathon_ful))
p.adjust(summary(fit)$coefficients[,4],method = 'bonferroni')
summary(fit)
tidy(fit)
aov(fit)
aov(fit)
(atest <- anova(fit))
(atest <- aov(fit))
(aatest <- anova(fit))
summary(aatest)
summary(atest)
(atest <- aov(fit))
summary(atest)
summary(atest)
(atest <- aov(fit))
summary(atest)
(aatest <- anova(fit))
summary(aatest)
summary(fit)
(atest <- aov(fit))
summary(atest)
summary(fit)
m2 + geom_smooth(method = 'lm')
knitr::opts_chunk$set(echo = TRUE)
library(GGally)
library(broom)
marathon<- read.csv2(url("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAADr271pVEKwHd3d3x5_lvsimoXp56bks5aLDIiwA%3D%3D"), header=TRUE, sep=",")
library(tidyverse)
marathon_ful<- marathon %>%
filter(cohort1 == 1) %>%
select(c(age, bmi, female, footwear, group, injury, mf_d, mf_di, mf_ti,  max, sprint, tempo))%>% mutate(mf_s = mf_d/mf_ti)
m <- marathon_ful %>% mutate(sprint=as.factor(sprint), tempo=as.factor(tempo)) %>% group_by(sprint, tempo) %>% summarise(marathon_groups = mean(mf_s))
marathon_ful
m
m %>% ggplot() + aes(x = sprint, y = marathon_groups, colour = tempo) +  geom_line(aes(group = tempo)) +geom_point() + geom_jitter()
(fit <- lm(marathon_ful$mf_s~marathon_ful$sprint*marathon_ful$tempo, marathon_ful))
p.adjust(summary(fit)$coefficients[,4],method = 'bonferroni')
summary(fit)
tidy(fit)
(atest <- aov(fit))
summary(atest)
summary(fit)
(m2 <- marathon_ful %>%  ggplot(aes(as.double(max), mf_s)) + geom_point())
(fit <- lm(marathon_ful$mf_s~as.numeric(marathon_ful$max), marathon_ful))
p.adjust(summary(fit)$coefficients[,4],method = 'bonferroni')
(fit <- lm(marathon_ful$mf_s~as.numeric(marathon_ful$max), marathon_ful))
p.adjust(summary(fit)$coefficients[,4],method = 'bonferroni')
m2 + geom_smooth(method = 'lm')
getwd()
db_connection <- dbConnect(RSQLite::SQLite(),
dbname = 'drinks.db')
setwd("C:/Users/Toniloba/Desktop/MDS/DSCI 513 - Databases and Data Retrieval/DSCI_513_lab4_tedd")
getwd()
library(DBI)
library(RSQLite)
db_connection <- dbConnect(RSQLite::SQLite(),
dbname = 'drinks.db')
View(db_connection)
View(db_connection)
install.packages('xml')
install.packages('xml')
install.packages('xml2')
install.packages('rvest')
library(xml2)
library(rvest)
library(xml2)
library(rvest)
library(xml2)
library(rvest)
url_MDS <- "http://masterdatascience.science.ubc.ca/"
page_MDS <- read_html(url_MDS)
View(page_MDS)
html_nodes()
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-address"]/div[4]')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-address"]/div[5]/a')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-social-icons"]/a[1]')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-social-icons"]/a[1]')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-social-icons"]/a[1]')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-address"]/div[5]/a')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-social-icons"]/a[1]') %>%
html_attr('href')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-address"]/div[5]/a')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-address"]/div[5]/a') %>%
html_attr('href')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-address"]/div[4]')
page_MDS %>%
html_nodes(xpath = '//*[@id="ubc7-unit-address"]/div[4]') %>%
html_text()
library(xml2)
tree <- read_xml("subset_dblp.xml")
library(xml2)
tree <- read_xml("subset_dblp.xml")
library(xml2)
tree <- read_xml("subset_dblp.xml")
root <- xml_root(tree)
results <- xml_find_all(tree,"//*[@key='journals/acta/Hesselink13']")
View(results)
View(root)
View(tree)
View(tree)
View(tree)
View(tree)
view(tree)
Don <- (tree, "//title/author['Donald E. Knuth']")
Don <- xml_find_all(tree, "//title/author['Donald E. Knuth']")
Don <- xml_find_all(tree, "//title/author")
Don <- xml_find_all(tree, "//title")
Don <- xml_find_all(tree, "//title[author = Donald E. Knuth]")
Don
Don <- xml_find_all(tree, "//*[author = Donald E. Knuth]/title")
Don
Don <- xml_find_all(tree, "//*[author = Donald E. Knuth]/title")
Don
Don <- xml_find_all(tree, "//*[author = 'Donald E. Knuth']/title")
Don
Day <- xml_find_all(tree, "//titles[@mdate="2008-02-13"]")
Day <- xml_find_all(tree, "//titles[@mdate='2008-02-13']")
Don
Day <- xml_find_all(tree, "//titles[@mdate='2008-02-13']")
Don
Day <- xml_find_all(tree, "//articles[@mdate='2008-02-13']/title")
Don
Day
Day <- xml_find_all(tree, "//articles[@mdate='2008-02-13']/title")
Day
Day <- xml_find_all(tree, "//title[@mdate='2008-02-13']")
Day
Day <- xml_find_all(tree, "//*[@mdate='2008-02-13']/title")
Day
Day <- xml_find_all(tree, "//article[@mdate='2008-02-13']/title")
Day
Day <- xml_find_all(tree, "//article[@mdate='2008-02-13']/title")
Day
Day <- xml_find_all(tree, "//[@mdate='2008-02-13']/title")
Day
Day <- xml_find_all(tree, "//article[@mdate='2008-02-13']/title")
Day
library(packrat)
getwd()
setwd("C:/Users/Toniloba/Desktop/MDS/DSCI_522 _Workflows")
getwd()
packrat::init('Student_Performance/')
library(tidyverse)
library(faraway)
install.packages("faraway")
install.packages("faraway")
library(faraway)
library(broom)
library(car)
head(mtcars)
# perform an linear regression, where y = mpg (miles per gallon), x1 = disp (displacement in
# cubic inches), x2 = hp (horsepower), x3 = wt (weight in thousand pounds)
# and x4 = drat (rear axle ratio)
lm_model_2 <- lm(mpg ~ disp + hp + wt + drat, data = mtcars)
summary(lm_model_2)
lm_model_2_vals <- augment(lm_model_2)
# plot residuals against fitted values
lm_model_2_resid_vs_fitted <- ggplot(lm_model_2_vals,
aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0)
lm_model_2_resid_vs_fitted
# look at data
head(mammalsleep)
# perform an linear regression, where:
#   y = dream (hours of dreaming sleep per day),
#   x1 = body (body weight in kg),
#   x2 = brain (brain weight in g),
#   x3 = sleep (total hours spent sleeping per day),
#   x4 = lifespan (maximum life span in years),
#   x5 = gestation (gestation time in days),
#   x6 = predation (predation index, with 1 meaning least likely to be preyed upon, and 5 being most likely),
#   x7 = exposure (sleep exposure index, with 1 meaning least exposed to predators/elements, and  5 being most exposed).
lm_model_3 <- lm(dream ~ body +
brain +
sleep +
lifespan +
gestation +
predation +
exposure, data = mammalsleep)
tidy(lm_model_3)
# look at variance inflation factor
print(vif(lm_model_3))
head(mtcars)
# perform an linear regression, where y = mpg (miles per gallon), x1 = disp (displacement in
# cubic inches), x2 = hp (horsepower), x3 = wt (weight in thousand pounds)
# and x4 = drat (rear axle ratio)
lm_model_2 <- lm(mpg ~ disp + hp + wt + drat, data = mtcars)
summary(lm_model_2)
lm_model_2_vals <- augment(lm_model_2)
# plot residuals against fitted values
lm_model_2_resid_vs_fitted <- ggplot(lm_model_2_vals,
aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0)
lm_model_2_resid_vs_fitted
summary(lm_model_2)
lm_model_2_resid_vs_fitted
install.packages(car)
getwd()
packrat::snapshot()
setwd('Student_Performance/')
getwd()
packrat::snapshot()
